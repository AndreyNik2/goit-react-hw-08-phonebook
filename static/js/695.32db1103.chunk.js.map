{"version":3,"file":"static/js/695.32db1103.chunk.js","mappings":"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","sources":["pages/ContactsBook.styled.js","components/contactsbook/Form.styled.js","components/contactsbook/Form.js","components/contactsbook/ContactList/ContactList.styled.js","components/contactsbook/FormEdit.js","components/contactsbook/ContactItem/ContactItem.styled.js","components/contactsbook/ContactItem/ContactItem.js","components/contactsbook/ContactList/ContactList.js","components/contactsbook/Filter.styled.js","components/contactsbook/Filter.js","pages/Contactsbook.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  margin: 20px;\n  color: #d4fe00;\n`;\n\nexport const TitleContacts = styled.h2`\n  margin: 20px;\n  color: #d4fe00;\n`;\n\nexport const BoxPhonebook = styled.div`\n  padding: 10px;\n  color: orange;\n`;\n","import styled from 'styled-components';\n\nexport const FormEl = styled.form`\n`;\n\nexport const LabelFormEl = styled.label`\nmargin-right:10px;\nfont-weight: 700;\n`;\n\nexport const InputFormEl = styled.input`\nmargin-left:10px;\n`;","import React, { useState } from 'react';\nimport { FormEl, LabelFormEl, InputFormEl } from './Form.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/contactSlice';\n\nfunction Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const formSubmitHandler = data => {\n    if (contacts.filter(contact => contact.name === data.name).length > 0) {\n      alert(`${data.name}  is already in contacts`);\n      return;\n    }\n    dispatch(addContacts(data));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.warn('There is no such');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    formSubmitHandler({ name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <LabelFormEl>\n        Name\n        <InputFormEl\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelFormEl>\n      <LabelFormEl>\n        Number\n        <InputFormEl\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelFormEl>\n\n      <button type=\"submit\">Add contact</button>\n    </FormEl>\n  );\n}\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-inline-start: 0px;\n`;\n\nexport const ContactItem = styled.li`\ndisplay: flex;\nmargin: 5px;\nlist-style: none;\n`;\n\nexport const DeleteButton = styled.button`\npadding: 10px 25px;\nborder: none;\nborder-radius: 5px;\nbackground-color: #111111;\ncolor: orange;\n`;\n\nexport const Contact = styled.p`\nwidth:300px;\nfont-size: 16px\n`;","import React, { useState } from 'react';\nimport { FormEl, LabelFormEl, InputFormEl } from './Form.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { editContacts } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/contactSlice';\n\nfunction FormEdit({ contact, closeModal }) {\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const contactId = contact.id;\n\n  const formSubmitHandler = data => {\n    console.log(data);\n    const otherContacts = contacts.filter(item => item.id !== data.contactId);\n    console.log(otherContacts);\n    if (otherContacts.filter(item => item.name === data.name).length > 0) {\n      alert(`${data.name}  is already in contacts`);\n      return;\n    }\n    dispatch(editContacts(data));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.warn('There is no such');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    formSubmitHandler({ name, number, contactId });\n    resetForm();\n    closeModal();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <LabelFormEl>\n        Name\n        <InputFormEl\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelFormEl>\n      <LabelFormEl>\n        Number\n        <InputFormEl\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelFormEl>\n\n      <button type=\"submit\">Edit contact</button>\n    </FormEl>\n  );\n}\n\nexport default FormEdit;\n","import styled from 'styled-components';\n\nexport const DeleteButton = styled.button`\n  padding: 10px 25px;\n  border: none;\n  border-radius: 5px;\n  background-color: #111111;\n  color: orange;\n`;\n\nexport const Contact = styled.p`\n  width: 300px;\n  font-size: 16px;\n`;\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport FormEdit from '../FormEdit';\n\nimport { DeleteButton, Contact } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const [isModalOpen, setIsModalOpen] = useState(null);\n  const dispatch = useDispatch();\n\n  const modalStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  Modal.setAppElement('#root');\n\n  const deleteContact = contactId => {\n    dispatch(deleteContacts(contactId));\n    };\n    \n    const onClickEdit = () => {\n        setIsModalOpen(true);\n    }\n\n    const closeModalEdit = () => {\n        setIsModalOpen(null);\n    }\n\n   \n\n  return (\n    <>\n      <Contact>\n        {contact.name}: {contact.number}\n      </Contact>\n      <DeleteButton onClick={() => deleteContact(contact.id)} type=\"button\">\n        Delete\n      </DeleteButton>\n      <button onClick={onClickEdit}>Edit</button>\n      <Modal\n        isOpen={isModalOpen !== null}\n        onRequestClose={closeModalEdit}\n        style={modalStyles}\n        shouldCloseOnEsc={isModalOpen !== null}\n      >\n        <FormEdit contact={contact} closeModal={() => {closeModalEdit()}} />\n      </Modal>\n    </>\n  );\n};\n","import { List } from './ContactList.styled';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contactSlice';\nimport { ContactItem } from '../ContactItem/ContactItem';\n\n\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const onFiltrationContact = (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n\n\n  return (\n    <>\n      <List>\n        {onFiltrationContact(contacts, filter).map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\nmargin-left:10px;\nwidth: 300px\n`;\n\nexport const FilterLabel = styled.label`\ndisplay: block;\nfont-weight: 700;\n\n`;\n","import { getFilter, changeFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Filter = ({ value, onChange }) => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name:\n      <FilterInput type=\"text\" value={filter} onChange={onChangeFilter} />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport {\n  TitlePhonebook,\n  BoxPhonebook,\n  TitleContacts,\n} from './ContactsBook.styled';\nimport Form from '../components/contactsbook/Form';\nimport ContactList from '../components/contactsbook/ContactList/ContactList';\nimport Filter from '../components/contactsbook/Filter';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getIsLoading } from 'redux/contacts/contactSlice';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nfunction ContactsBook() {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <BoxPhonebook>\n        <TitlePhonebook>Phonebook</TitlePhonebook>\n        <Form />\n        <TitleContacts>Contacts</TitleContacts>\n        <Filter />\n        <ColorRing\n          visible={Boolean(isLoading)}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n        <ContactList />\n        {contacts.length === 0 && !isLoading && (\n          <p>Contactlist empty. Please add contact.</p>\n        )}\n      </BoxPhonebook>\n    </main>\n  );\n}\n\nexport default ContactsBook;\n"],"names":["TitlePhonebook","styled","TitleContacts","BoxPhonebook","FormEl","LabelFormEl","InputFormEl","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","getContacts","handleChange","event","currentTarget","value","console","warn","resetForm","onSubmit","data","preventDefault","filter","contact","length","alert","addContacts","onChange","type","pattern","title","required","List","closeModal","contactId","id","log","otherContacts","item","editContacts","formSubmitHandler","DeleteButton","Contact","ContactItem","isModalOpen","setIsModalOpen","Modal","closeModalEdit","onClick","deleteContacts","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","shouldCloseOnEsc","getFilter","normalizedFilter","toLowerCase","includes","onFiltrationContact","map","FilterInput","FilterLabel","changeFilter","isLoading","getIsLoading","useEffect","fetchContacts","visible","Boolean","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}